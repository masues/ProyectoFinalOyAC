; Inicio del programa
dirInicio           EQU $0100
contadorExterno     EQU $0110
contadorInterno     EQU $0111
longitudArreglo     EQU#$0004


0000	  CLR(EXT:7F) 0110; contadorExterno <- 0
	cicloExterno: (0003)
0003	  LDX(IMM:CE) 0100; IX <- dirInicio
0006	  CLR(EXT:7F) 0111; contadorInterno <- 0
	revisaFinCicloInterno: (0009)
0009  	  LDAA(EXT:B6) 0111; ACCA <- contadorInterno
000C  	  CMPAM1(IMM:34) 04; (ACCA) - (longitudArreglo) - 1, o bien, (contadorInterno) - (longitudArreglo) - 1
000E  	  BEQ(REL:27) 0C	incrementaContadorExterno; Salta si contadorInterno = nMenosUno
	cicloInterno: (0010)
0010	  LDAA(INX:A6) $00,X; ACCA <- (IX)
0012	  CMPA(INX:A1) $01,X; (ACCA) - (IX+1), o bien (IX) - (IX+1)
0014  	BLS(REL:23) 01	incrementaIndice; Salta a incrementaIndice si (IX) <= (IX+1)
  	; Si entró aquí, significa que (IX)>(IX+1), por lo que hay que intercambiar
0016	  SWIX(INH:31); (IX) <-> (IX+1), es decir, intercambia dos registros de la memoria
	incrementaIndice: (0017)
0017	  INCLX(EXT:33) 0111; IX <- IX + 1, contadorInterno <- (contadorInterno) + 1
001A	  BRA(REL:20) ED revisaFinCicloInterno
	incrementaContadorExterno: (001C)
001C	  INC(EXT:7C) 0110; contadorExterno <- (contadorExterno) + 1
001F	  LDAA(EXT:B6) 0110; ACCA <- (contadorExterno)
0022	  CMPAM1(IMM:34) 04; (ACCA) - (longitudArreglo) - 1, o bien, (contadorInterno) - (longitudArreglo) - 1
0024	  BLO(REL:25) DD	cicloExterno; Si (contadorExterno) < longitudArreglo - 1, salta a cicloExterno
  	;En caso contrario, se ha terminado el ordenamiento, resta imprimir el arreglo
0026	  LDX(IMM:CE) 0100; IX <- dirInicio
0029	  LDAB(INX:E6) $00,X; ACCB <- (IX)
002B	  LDAB(INX:E6) $01,X; ACCB <- (IX+1)
002D	  LDAB(INX:E6) $02,X; ACCB <- (IX+2)
002F	  LDAB(INX:E6) $03,X; ACCB <- (IX+3)
0031	  JMP(EXT:7E) 0000
	  END
